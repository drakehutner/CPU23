% Game of Life in ASM23
% Author: Hanno Sternberg <hanno@almostintelligent.de>
% License: MIT
%

        INC inc/base.asm23

ORG 0x00000B
% offset 0x00000B - 0x000022  Interrupt vectors
:IRQRST @init     % Reset Interrupt
:IRQTIM #0x000000 % Timer Interrupt
        #0x000000
:IRQKEY @keyISR   % Keyboard Interrupt
:IRQMOU #0x000000 % Mouse Interrupt
:IRQUTX #0x000000 % UART TX Interrupt
:IRQURX #0x000000 % UART RX Interrupt

        INC inc/dma.asm23 % include DMA addressess
        INC inc/irq.asm23 % include Interrupts

% offset 0x000042: Here be programs
        ORG 0x000042
% Initialize everything
% 2 Screen Buffer @7FE200 and @7FEC00
%
        NAME R43 FGRed
        NAME R44 FGGreen
        NAME R45 CursorColor
:init   SET $FGRed #0x1
        LSL $FGRed #19 $FGRed
        SET $FGGreen #0x2
        LSL $FGGreen #19 $FGGreen
        SET $CursorColor #0x33
        LSL $CursorColor #15 $CursorColor
        BIT IM IM #0x23  % Active keyboard interrupts
        JMP @create

% Variables
:buffer VAR 81

% Move around the field
        NAME R20 LastKey
        NAME R21 CursorAddr
:create CPR DM $CursorAddr
        OR #0x5F $CursorColor RX
        STR RX $CursorAddr
:move   NOP
        NOP
        NOP
        NOP
        NOP
        CMP $LastKey #1
        BRA @up
        CMP $LastKey #2
        BRA @down
        CMP $LastKey #3
        BRA @left
        CMP $LastKey #4
        BRA @right
        CMP $LastKey #0x20  % Space
        BRA @space
        CMP $LastKey #0x0A  % Return
        BRA @enter
        JMP @move
% Up Arrow Key
:up     SET $LastKey #0
        STR #0x20 $CursorAddr
        SUB $CursorAddr #80 $CursorAddr
        OR #0x5F $CursorColor RX
        STR RX $CursorAddr
        JMP @move
% Down Arrow Key
:down   SET $LastKey #0
        STR #0x20 $CursorAddr
        ADD $CursorAddr #80 $CursorAddr
        OR #0x5F $CursorColor RX
        STR RX $CursorAddr
        JMP @move
% Left Arrow Key
:left   SET $LastKey #0
        STR #0x20 $CursorAddr
        SUB $CursorAddr #1 $CursorAddr
        OR #0x5F $CursorColor RX
        STR RX $CursorAddr
        JMP @move
% Right Arrow Key
:right  SET $LastKey #0
        STR #0x20 $CursorAddr
        ADD $CursorAddr #1 $CursorAddr
        OR #0x5F $CursorColor RX
        STR RX $CursorAddr
        JMP @move
% Space Key
:space  SET $LastKey #0
        OR #0x40 $FGGreen RX
        STR RX $CursorAddr
        ADD $CursorAddr #1 $CursorAddr
        OR #0x5F $CursorColor RX
        STR RX $CursorAddr
        JMP @move
:enter  JMP @gol
        HLT

% Game of Life: Iterate all cells
%
        NAME R1 CellX
        NAME R2 CellY
        NAME R3 Cell
:gol    CPR DB DM
        OR #0x5F $CursorColor RX
        STR RX DM
        SET $CellX #0
% for field_x in (0..79)
:for_x  SET $CellY #0
% for field_y in (0..29)
:for_y  LDR DM $Cell    % Value of the current cell
        AND $Cell #0xFF $Cell  % Mask Color Information
        NAME R4 Neighbors
        NAME R5 NeighborAddr
        NAME R6 Neighbor
        NAME R7 Buffer
        % Load Buffer for current cell
        SET $Buffer @buffer
        ADD $Buffer $CellX $Buffer
        % Upper cells
        CMP $CellY #0
        BRA @skpne
        % northwest
        CMP $CellX #0
        BRA @skpnw
        SUB $Buffer #1 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @skpnw
        ADD $Neighbors #1 $Neighbors
        % north
:skpnw  LDR $Buffer $Neighbor
        CMP $Neighbor #0x5F
        BNE @skpn
        ADD $Neighbors #1 $Neighbors
        % northeast
:skpn   CMP $CellX #79
        BRA @skpne
        ADD $Buffer #1 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @skpne
        ADD $Neighbors #1 $Neighbors
        % east
:skpne  CMP $CellX #0
        BRA @skpe
        ADD DM #1 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @skpe
        ADD $Neighbors #1 $Neighbors
        % lower cells
:skpe   CMP $CellY #29
        BRA @skpsw
        % southeast
        CMP $CellX #79
        BRA @skpse
        ADD DM #81 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @skpse
        ADD $Neighbors #1 $Neighbors
        % south
:skpse  ADD DM #80 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @skps
        ADD $Neighbors #1 $Neighbors
        % southwest
:skps   CMP $CellX #0
        BRA @skpsw
        ADD DM #79 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @skpsw
        ADD $Neighbors #1 $Neighbors
        % west
:skpsw  CMP $CellX #0
        BRA @buf
        ADD $Buffer #80 RX
        LDR RX $Neighbor
        CMP $Neighbor #0x5F
        BNE @buf
        ADD $Neighbors #1 $Neighbors
% Write current cell to buffer
:buf    STR $Cell $Buffer
% Is the current cell alive?
        CMP $Cell #0x5F  % '@'
        BRA @alive
        CMP $Cell #0x20  % ' '
        BRA @dead
        CMP $Cell #0x4F  % 'O'
        BRA @corpse
% The cell is something else, best leave it undisturbed
        JMP @next
% Alive cells with 2 or 3 neighbors stay alive
:alive  CMP $Neighbors #2
        BRA @spawn
        CMP $Neighbors #3
        BRA @spawn
        JMP @die
% Dead cells with 3 neighbors spawn a new offspring
:dead   CMP $Neighbors #3
        BRA @spawn
        JMP @die
% Corpse cells are dead cells
:corpse CMP $Neighbors #3
        BRA @spawn
        JMP @clear
% Create life, where there is none
:spawn  OR #0x40 $FGGreen RX
        STR RX $CursorAddr
        JMP @next
% Exterminate!
:die    OR #0x4F $FGRed RX
        STR RX $CursorAddr
        JMP @next
% Clear the remains
:clear  STR #0x20 $CursorAddr
        JMP @next
% Select the next cell
:next   ADD DM #1 DM  % Select next cell
        OR #0x5F $CursorColor RX
        STR RX DM
        ADD $CellY #1 $CellY
        CMP $CellY #30
        BNE @for_y
        ADD $CellX #1 $CellX
        CMP $CellX #80
        BNE @for_x
        JMP @gol
        HLT

% Keyboard Interrupt
:keyISR LDR @DMAKEY $LastKey
        JMP IR % Return to normal program
% Should never get here
        HLT
